// Delegate Backbone Events - Backbone.js Plugin
// by Ian Storm Taylor
//
// Provides `delegateBackboneEvents()` and `undelegateBackboneEvents()` methods so you can keep all of your event bindings in a `backboneEvents` hash instead of spread everywhere. Which makes it much easier to get a grasp on what events are being triggered where.
(function(a){a.Model.prototype.delegateBackboneEvents=a.Collection.prototype.delegateBackboneEvents=a.Router.prototype.delegateBackboneEvents=a.View.prototype.delegateBackboneEvents=function(c){c||(c=this.backboneEvents),this._backboneEvents||(this._backboneEvents=[]),this.undelegateBackboneEvents();for(var d in c){var e,f,g,h,i,j,k=/\s*,\s*/,l=/(\w+)(\.(\w+))?/;e=d.split(k),g=this;if(e.length===2){var m=l.exec(e[0]);g=this[m[1]],g instanceof a.Model&&m[3]&&(g=g.attributes[m[3]])}h=e.length===1?e[0]:e[1];if(!h)throw new Error("Invalid event");f=typeof c[d]=="string"?[c[d]]:c[d];for(var n=0,o;o=f[n];n++){o=o.split(k);var p=l.exec(o[0]);this[p[1]]&&(i=p[3]?this[p[1]][p[3]]:this[p[1]]);if(this[p[1]]&&p[3]&&this[p[1]][p[3]]===undefined||this[p[1]]===undefined&&p[3]===undefined)throw new Error("Cant find method");j=this,o[1]&&o[1]==="this"?j=this:o[1]&&this[o[1]]?j=this[o[1]]:p[3]&&this[p[1]]&&(j=this[p[1]]),g&&i&&j&&(g.on(h,i,j),this._backboneEvents.push([g,h,i,j]))}}},a.Model.prototype.undelegateBackboneEvents=a.Collection.prototype.undelegateBackboneEvents=a.Router.prototype.undelegateBackboneEvents=a.View.prototype.undelegateBackboneEvents=function(){if(!this._backboneEvents||this._backboneEvents.length===0)return;for(var b=0,c;c=this._backboneEvents[b];b++)c[0].off(c[1],c[2],c[3])}})(Backbone);